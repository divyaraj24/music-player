name: CI

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: Windows VS2019, os: windows-2019 }
          - { name: Windows VS2022, os: windows-2022 }
          - { name: Linux GCC, os: ubuntu-latest }
          - {
              name: Linux Clang,
              os: ubuntu-latest,
              flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++,
            }
          - { name: macOS, os: macos-latest }
        config:
          - { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
          - { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Linux: Install dependencies
      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config libtag1-dev \
            libxrandr-dev libxcursor-dev libxi-dev libudev-dev \
            libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev libfreetype-dev

      # macOS: Install dependencies via Homebrew
      - name: Install macOS Dependencies
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install taglib pkg-config

      # Windows: Install dependencies via vcpkg

      - name: Setup vcpkg
        if: runner.os == 'Windows'
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: "latest"
          runVcpkgInstall: true
          vcpkgJsonGlob: "**/vcpkg.json" # Optional, if you add one

      - name: Configure
        run: >
          cmake -B build
          ${{ matrix.platform.flags }}
          ${{ matrix.config.flags }}
          -DCMAKE_TOOLCHAIN_FILE=${{ runner.os == 'Windows' && 'C:/vcpkg/scripts/buildsystems/vcpkg.cmake' || '' }}

      - name: Build
        run: cmake --build build --config Release
